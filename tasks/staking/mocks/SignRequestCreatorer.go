// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	core "github.com/avalido/mpc-controller/core"
	mock "github.com/stretchr/testify/mock"

	staking "github.com/avalido/mpc-controller/tasks/staking"
)

// SignRequestCreatorer is an autogenerated mock type for the SignRequestCreatorer type
type SignRequestCreatorer struct {
	mock.Mock
}

// CreateSignRequest provides a mock function with given fields: task
func (_m *SignRequestCreatorer) CreateSignRequest(task staking.TxHashGenerator) (*core.SignRequest, error) {
	ret := _m.Called(task)

	var r0 *core.SignRequest
	if rf, ok := ret.Get(0).(func(staking.TxHashGenerator) *core.SignRequest); ok {
		r0 = rf(task)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*core.SignRequest)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(staking.TxHashGenerator) error); ok {
		r1 = rf(task)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSignRequestCreatorer interface {
	mock.TestingT
	Cleanup(func())
}

// NewSignRequestCreatorer creates a new instance of SignRequestCreatorer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSignRequestCreatorer(t mockConstructorTestingTNewSignRequestCreatorer) *SignRequestCreatorer {
	mock := &SignRequestCreatorer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
