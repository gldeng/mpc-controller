package mpc_controller

import (
	"context"
	"time"
)

// ---------------------------------------------------------------------------------------------------------------------
// Interfaces regarding task manager, which is fully event-driven

type Event interface {
	ID() string       // event ID
	Type() string     // event type
	Name() string     // event name
	Who() string      // who create event
	When() time.Time  // when event created
	Raw() interface{} // event raw content
	String() string   // event description
}

type Task interface {
	Do(ctx context.Context, input Event) (output Event, err error)
}

type TaskCreator interface {
	NewTask() Task
}

type TaskManager interface {
	Start(ctx context.Context) error
	Register(evt Event, task ...TaskCreator) error // internally register event with its name
	Unregister(evt Event, task ...TaskCreator) error
	Happen(evt Event) error // report an event happened, which should be further processed by corresponding Task created generated by task creator(s)
}
