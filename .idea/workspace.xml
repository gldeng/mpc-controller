<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="40d69e8c-0e78-4ccb-8795-616b0f5d21a3" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/contract/contracts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitmodules" beforeDir="false" afterPath="$PROJECT_DIR$/.gitmodules" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contract/MpcManager.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/contract/abigen.go" beforeDir="false" afterPath="$PROJECT_DIR$/contract/abigen.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contract/abigen.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/contract/lib/openzeppelin-contracts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/contract/lib/openzeppelin-contracts-upgradeable" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/contract/src/AvaLidoMock.sol" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/contract/src/MpcManager.sol" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/contract/src/Roles.sol" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/contract/src/Types.sol" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/contract/src/interfaces/IMpcManager.sol" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go Application" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../../../../usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="urls">
      <list>
        <option value="file://$PROJECT_DIR$/../../../../" />
      </list>
    </option>
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/../../../../pkg/mod/github.com/enriquebris/goconcurrentqueue@v0.6.3/fifo_queue.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../../../../pkg/mod/github.com/ethereum/go-ethereum@v1.10.19/accounts/abi/abi.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../../../../pkg/mod/github.com/ethereum/go-ethereum@v1.10.19/accounts/abi/bind/base.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/cmd/mpc-controller/main.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/core/config.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/core/event_handler.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/core/types/quorum.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/subscriber/subscriber.go" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2EhW1EndfnxuINDxwMQR5lng9Uy" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.vendoring.notification.had.been.shown&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;configurable..is.expanded&quot;: &quot;false&quot;,
    &quot;configurable.GoLibrariesConfigurable.is.expanded&quot;: &quot;true&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;//wsl$/Ubuntu-20.04/home/gldeng/go/src/github.com/avalido/mpc-controller/tasks/keygen&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;com.goide.configuration.GoLibrariesConfigurableProvider&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="\\wsl$\Ubuntu-20.04\home\gldeng\go\src\github.com\avalido\mpc-controller\tasks\keygen" />
      <recent name="\\wsl$\Ubuntu-20.04\home\gldeng\go\src\github.com\avalido\mpc-controller\tasks\ethlog" />
      <recent name="\\wsl$\Ubuntu-20.04\home\gldeng\go\src\github.com\avalido\mpc-controller\tests\tasks\task_add_participant" />
      <recent name="\\wsl$\Ubuntu-20.04\home\gldeng\go\src\github.com\avalido\mpc-controller\tests\tasks\task_c2p" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="\\wsl$\Ubuntu-20.04\home\gldeng\go\src\github.com\avalido\mpc-controller\core\types" />
      <recent name="\\wsl$\Ubuntu-20.04\home\gldeng\go\src\github.com\avalido\mpc-controller\eventhandlercontext" />
      <recent name="\\wsl$\Ubuntu-20.04\home\gldeng\go\src\github.com\avalido\mpc-controller\taskcontext" />
      <recent name="\\wsl$\Ubuntu-20.04\home\gldeng\go\src\github.com\avalido\mpc-controller\mpcclient" />
      <recent name="\\wsl$\Ubuntu-20.04\home\gldeng\go\src\github.com\avalido\mpc-controller\pool" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestAddParticipant in github.com/avalido/mpc-controller/tasks/ethlog (2)">
    <configuration name="go build github.com/avalido/mpc-controller/cmd/mpc-controller1" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="mpc-controller" />
      <working_directory value="$PROJECT_DIR$" />
      <parameters value="--host 34.172.25.188 --port 9650 --mpc-manager-address 0x3fc3Ea6Bf83A467Da8FA5Db54659fEa760BB9222" />
      <kind value="PACKAGE" />
      <package value="github.com/avalido/mpc-controller/cmd/mpc-controller1" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/mpc-controller1/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/avalido/mpc-controller/tests/tasks/task_adddelegator" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="mpc-controller" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/avalido/mpc-controller/tests/tasks/task_adddelegator" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/tests/tasks/task_adddelegator/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestAddParticipant in github.com/avalido/mpc-controller/tasks/ethlog (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="mpc-controller" />
      <working_directory value="$PROJECT_DIR$/tasks/ethlog" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/avalido/mpc-controller/tasks/ethlog" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestAddParticipant\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestAddParticipant in github.com/avalido/mpc-controller/tasks/ethlog (2)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="mpc-controller" />
      <working_directory value="$PROJECT_DIR$/tasks/ethlog" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/avalido/mpc-controller/tasks/ethlog" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestAddParticipant\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestKeyGeneratedHandler in github.com/avalido/mpc-controller/tasks/ethlog" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="mpc-controller" />
      <working_directory value="$PROJECT_DIR$/tasks/ethlog" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/avalido/mpc-controller/tasks/ethlog" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestKeyGeneratedHandler\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRequestAdded in github.com/avalido/mpc-controller/tasks/keygen" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="mpc-controller" />
      <working_directory value="$PROJECT_DIR$/tasks/keygen" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/avalido/mpc-controller/tasks/keygen" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRequestAdded\E$" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build github.com/avalido/mpc-controller/cmd/mpc-controller1" />
      <item itemvalue="Go Build.go build github.com/avalido/mpc-controller/tests/tasks/task_adddelegator" />
      <item itemvalue="Go Test.TestAddParticipant in github.com/avalido/mpc-controller/tasks/ethlog (2)" />
      <item itemvalue="Go Test.TestAddParticipant in github.com/avalido/mpc-controller/tasks/ethlog (1)" />
      <item itemvalue="Go Test.TestKeyGeneratedHandler in github.com/avalido/mpc-controller/tasks/ethlog" />
      <item itemvalue="Go Test.TestRequestAdded in github.com/avalido/mpc-controller/tasks/keygen" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestAddParticipant in github.com/avalido/mpc-controller/tasks/ethlog (2)" />
        <item itemvalue="Go Test.TestAddParticipant in github.com/avalido/mpc-controller/tasks/ethlog (1)" />
        <item itemvalue="Go Build.go build github.com/avalido/mpc-controller/tests/tasks/task_adddelegator" />
        <item itemvalue="Go Test.TestKeyGeneratedHandler in github.com/avalido/mpc-controller/tasks/ethlog" />
        <item itemvalue="Go Test.TestRequestAdded in github.com/avalido/mpc-controller/tasks/keygen" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.History.Properties">
    <option name="COLUMN_ID_ORDER">
      <list>
        <option value="Default.Root" />
        <option value="Default.Author" />
        <option value="Default.Date" />
        <option value="Default.Subject" />
        <option value="Space.CommitStatus" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/tasks/rewarding/porter/utxoPorter.go</url>
          <line>179</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/utils/crypto/normalize_public_key.go</url>
          <line>70</line>
          <option name="timeStamp" value="12" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="GoTestRunConfiguration">
        <watch expression="*(*&quot;github.com/ethereum/go-ethereum/common.Hash&quot;)(824636970232)" />
        <watch expression="*(*&quot;github.com/ethereum/go-ethereum/accounts/abi.Argument&quot;)(824633938432)" />
        <watch expression="*(*&quot;github.com/ethereum/go-ethereum/accounts/abi.Argument&quot;)(824633938432)" />
      </configuration>
    </watches-manager>
  </component>
</project>